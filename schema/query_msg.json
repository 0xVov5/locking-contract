{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Query the NFT",
      "type": "object",
      "required": [
        "issued_nft"
      ],
      "properties": {
        "issued_nft": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Query the total vtokens issued to a single user.",
      "type": "object",
      "required": [
        "issued_vtokens"
      ],
      "properties": {
        "issued_vtokens": {
          "type": "object",
          "required": [
            "address",
            "denom",
            "start_after"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "denom": {
              "type": "string"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vested_tokens"
      ],
      "properties": {
        "vested_tokens": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "supply"
      ],
      "properties": {
        "supply": {
          "type": "object",
          "required": [
            "denom"
          ],
          "properties": {
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "current_proposal"
      ],
      "properties": {
        "current_proposal": {
          "type": "object",
          "required": [
            "app_id"
          ],
          "properties": {
            "app_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "proposal"
      ],
      "properties": {
        "proposal": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "bribe_by_proposal"
      ],
      "properties": {
        "bribe_by_proposal": {
          "type": "object",
          "required": [
            "extended_pair_id",
            "proposal_id"
          ],
          "properties": {
            "extended_pair_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "has_voted"
      ],
      "properties": {
        "has_voted": {
          "type": "object",
          "required": [
            "address",
            "proposal_id"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "address",
            "proposal_id"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claimable_bribe"
      ],
      "properties": {
        "claimable_bribe": {
          "type": "object",
          "required": [
            "address",
            "app_id"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "app_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Total amount of given denom withdrawable.",
      "type": "object",
      "required": [
        "withdrawable"
      ],
      "properties": {
        "withdrawable": {
          "type": "object",
          "required": [
            "address",
            "denom"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "total_v_tokens"
      ],
      "properties": {
        "total_v_tokens": {
          "type": "object",
          "required": [
            "address",
            "denom"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "denom": {
              "type": "string"
            },
            "height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "emission"
      ],
      "properties": {
        "emission": {
          "type": "object",
          "required": [
            "app_id"
          ],
          "properties": {
            "app_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "extended_pair_vote"
      ],
      "properties": {
        "extended_pair_vote": {
          "type": "object",
          "required": [
            "extended_pair_id",
            "proposal_id"
          ],
          "properties": {
            "extended_pair_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "user_proposal_all_up"
      ],
      "properties": {
        "user_proposal_all_up": {
          "type": "object",
          "required": [
            "address",
            "proposal_id"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "rebase"
      ],
      "properties": {
        "rebase": {
          "type": "object",
          "required": [
            "address",
            "app_id",
            "denom"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/Addr"
            },
            "app_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "denom": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    }
  }
}
